<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<testsuites name="ViewNewAcceptCancelAllBookingByCustomers" time="508" tests="6" failures="0" errors="0">
    <testsuite name="ViewNewAcceptCancelAllBookingByCustomers" tests="6" failures="0" errors="0" time="508" timestamp="2019-08-23 18:11:20" hostname="DAPL-Asset-180 - DAPL-Asset-180" id="Test Suites/ViewNewAcceptCancelAllBooking/ViewNewAcceptCancelAllBookingByCustomers">
        <properties>
            <property name="deviceName" value=""/>
            <property name="devicePlatform" value=""/>
            <property name="logFolder" value="C:\\Users\\DAPL-Asset-180\\Desktop\\project folder\\Workilo\\WorkiloAutomation(14.8.19)\\Reports\\ViewNewAcceptCancelAllBooking\\ViewNewAcceptCancelAllBookingByCustomers\\20190823_181116"/>
            <property name="logFiles" value="C:\\Users\\DAPL-Asset-180\\Desktop\\project folder\\Workilo\\WorkiloAutomation(14.8.19)\\Reports\\ViewNewAcceptCancelAllBooking\\ViewNewAcceptCancelAllBookingByCustomers\\20190823_181116\\execution0.log"/>
            <property name="attachments" value=""/>
            <property name="hostName" value="DAPL-Asset-180 - DAPL-Asset-180"/>
            <property name="hostAddress" value="192.168.1.188"/>
            <property name="os" value="Windows 8.1 64bit"/>
            <property name="katalonVersion" value="6.2.1.2"/>
        </properties>
        <testcase name="Test Cases/Workilo/Bookings/Customer/CustomerNewOrder(All)" classname="Test Cases/Workilo/Bookings/Customer/CustomerNewOrder(All)" status="PASSED">
            <system-out>2019-08-23 18:11:21 - [TEST_CASE][PASSED] - Test Cases/Workilo/Bookings/Customer/CustomerNewOrder(All): Test Cases/Workilo/Bookings/Customer/CustomerNewOrder(All)&#xD;
&#xD;
2019-08-23 18:11:22 - [TEST_STEP][PASSED] - System.setProperty("webdriver.chrome.driver", chromePath): null&#xD;
&#xD;
2019-08-23 18:11:22 - [TEST_STEP][PASSED] - driver = new org.openqa.selenium.chrome.ChromeDriver(): null&#xD;
&#xD;
2019-08-23 18:11:26 - [TEST_STEP][PASSED] - window().maximize(): null&#xD;
&#xD;
2019-08-23 18:11:27 - [TEST_STEP][PASSED] - try: null&#xD;
&#xD;
2019-08-23 18:11:27 - [TEST_STEP][PASSED] - driver.get("http://workilo.com"): null&#xD;
&#xD;
2019-08-23 18:11:39 - [TEST_STEP][PASSED] - timeouts().implicitlyWait(30, SECONDS): null&#xD;
&#xD;
2019-08-23 18:11:39 - [TEST_STEP][PASSED] - linkText("Log In")).click(): null&#xD;
&#xD;
2019-08-23 18:11:39 - [TEST_STEP][PASSED] - Thread.sleep(2000): null&#xD;
&#xD;
2019-08-23 18:11:41 - [TEST_STEP][PASSED] - id("email_login")).sendKeys("nabin@digitalaptech.com"): null&#xD;
&#xD;
2019-08-23 18:11:41 - [TEST_STEP][PASSED] - id("password_login")).sendKeys("admin#123"): null&#xD;
&#xD;
2019-08-23 18:11:42 - [TEST_STEP][PASSED] - //*[@value='Log in']")).click(): null&#xD;
&#xD;
2019-08-23 18:11:42 - [TEST_STEP][PASSED] - Thread.sleep(3000): null&#xD;
&#xD;
2019-08-23 18:11:45 - [TEST_STEP][PASSED] - xpath("/html/body/header/div/div[2]/ul/li[1]/a")).click(): null&#xD;
&#xD;
2019-08-23 18:11:45 - [TEST_STEP][PASSED] - Thread.sleep(1000): null&#xD;
&#xD;
2019-08-23 18:11:46 - [TEST_STEP][PASSED] - xpath("/html/body/div[4]/div/div[1]/ul/li[2]/a")).click(): null&#xD;
&#xD;
2019-08-23 18:11:48 - [TEST_STEP][PASSED] - Thread.sleep(1000): null&#xD;
&#xD;
2019-08-23 18:11:49 - [TEST_STEP][PASSED] - message = xpath("/html[1]/body[1]/div[6]/div[1]/div[1]/div[1]/div[1]/div[1]/ul[1]/li[1]/a[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:49 - [TEST_STEP][PASSED] - if (message.contains("(0)")): null&#xD;
&#xD;
2019-08-23 18:11:49 - [TEST_STEP][PASSED] - else: null&#xD;
&#xD;
2019-08-23 18:11:49 - [TEST_STEP][PASSED] - js = driver: null&#xD;
&#xD;
2019-08-23 18:11:49 - [TEST_STEP][PASSED] - rows = driver.findElements(By.xpath("//*[@id='tab-1']/table/tbody/tr")): null&#xD;
&#xD;
2019-08-23 18:11:49 - [TEST_STEP][PASSED] - out.println("Total Rows Size == " + rows.size()): null&#xD;
&#xD;
2019-08-23 18:11:49 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; rows.size(), (i++)]): null&#xD;
&#xD;
2019-08-23 18:11:49 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:11:49 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:49 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:49 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:49 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:49 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:49 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:50 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:11:50 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:11:50 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:11:50 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:11:50 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:11:50 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:11:50 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:11:50 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:11:50 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:11:50 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:11:50 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:11:50 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:11:50 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:11:50 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:11:50 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:11:50 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:11:50 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:11:50 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:11:50 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:11:50 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:11:50 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:11:50 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:11:50 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:11:50 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:11:50 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:11:50 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:50 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:50 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:50 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:50 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:50 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:50 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:11:50 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:11:50 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:11:50 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:11:50 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:11:50 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:11:50 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:11:50 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:11:50 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:11:50 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:11:50 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:11:51 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:11:51 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:11:51 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:11:51 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:11:51 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:11:51 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:11:51 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:11:51 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:11:51 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:11:51 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:11:51 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:11:51 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:11:51 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:11:51 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:11:51 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:51 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:51 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:51 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:51 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:51 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:51 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:11:51 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:11:51 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:11:51 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:11:51 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:11:51 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:11:51 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:11:51 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:11:51 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:11:51 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:11:51 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:11:51 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:11:51 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:11:51 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:11:51 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:11:51 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:11:51 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:11:51 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:11:51 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:11:51 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:11:51 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:11:51 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:11:51 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:11:51 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:11:51 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:11:51 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:51 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:51 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:51 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:51 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:51 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:52 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:11:52 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:11:52 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:11:52 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:11:52 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:11:52 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:11:52 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:11:52 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:11:52 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:11:52 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:11:52 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:11:52 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:11:52 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:11:52 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:11:52 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:11:52 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:11:52 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:11:52 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:11:52 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:11:52 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:11:52 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:11:52 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:11:52 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:11:52 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:11:52 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:11:52 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:52 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:52 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:52 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:52 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:52 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:52 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:11:52 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:11:52 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:11:52 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:11:52 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:11:52 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:11:52 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:11:52 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:11:52 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:11:52 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:11:52 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:11:52 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:11:52 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:11:52 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:11:52 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:11:52 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:11:52 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:11:52 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:11:52 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:11:52 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:11:52 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:11:52 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:11:52 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:11:52 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:11:52 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:11:52 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:53 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:53 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:53 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:53 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:53 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:53 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:11:53 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:11:53 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:11:53 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:11:53 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:11:53 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:11:53 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:11:53 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:11:53 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:11:53 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:11:53 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:11:53 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:11:53 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:11:53 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:11:53 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:11:53 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:11:53 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:11:53 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:11:53 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:11:53 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:11:53 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:11:53 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:11:53 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:11:53 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:11:53 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:11:53 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:53 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:53 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:53 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:53 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:53 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:54 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:11:54 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:11:54 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:11:54 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:11:54 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:11:54 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:11:54 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:11:54 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:11:54 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:11:54 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:11:54 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:11:54 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:11:54 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:11:54 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:11:54 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:11:54 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:11:54 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:11:54 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:11:54 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:11:54 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:11:54 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:11:54 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:11:54 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:11:54 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:11:54 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:11:54 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:54 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:54 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:54 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:54 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:54 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:54 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:11:54 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:11:54 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:11:54 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:11:54 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:11:54 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:11:54 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:11:54 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:11:54 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:11:54 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:11:54 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:11:54 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:11:54 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:11:54 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:11:54 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:11:54 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:11:54 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:11:54 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:11:54 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:11:54 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:11:54 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:11:54 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:11:54 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:11:54 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:11:54 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:11:54 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:54 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:54 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:55 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:55 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:55 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:55 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:11:55 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:11:55 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:11:55 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:11:55 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:11:55 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:11:55 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:11:55 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:11:55 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:11:55 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:11:55 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:11:55 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:11:55 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:11:55 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:11:55 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:11:55 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:11:55 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:11:55 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:11:55 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:11:55 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:11:55 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:11:55 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:11:55 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:11:55 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:11:55 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:11:55 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:55 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:55 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:55 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:55 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:55 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:55 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:11:55 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:11:55 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:11:55 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:11:55 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:11:56 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:11:56 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:11:56 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:11:56 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:11:56 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:11:56 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:11:56 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:11:56 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:11:56 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:11:56 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:11:56 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:11:56 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:11:56 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:11:56 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:11:56 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:11:56 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:11:56 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:11:56 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:11:56 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:11:56 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:11:56 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:56 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:56 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:56 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:56 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:56 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:56 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:11:56 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:11:56 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:11:56 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:11:56 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:11:56 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:11:56 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:11:56 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:11:56 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:11:56 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:11:56 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:11:56 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:11:56 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:11:56 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:11:56 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:11:56 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:11:56 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:11:56 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:11:56 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:11:56 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:11:56 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:11:56 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:11:56 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:11:56 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:11:56 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:11:56 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:56 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:56 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:56 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:56 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:57 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:57 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:11:57 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:11:57 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:11:57 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:11:57 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:11:57 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:11:57 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:11:57 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:11:57 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:11:57 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:11:57 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:11:57 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:11:57 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:11:57 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:11:57 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:11:57 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:11:57 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:11:57 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:11:57 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:11:57 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:11:57 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:11:57 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:11:57 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:11:57 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:11:57 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:11:57 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:57 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:57 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:57 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:57 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:57 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:57 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:11:57 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:11:57 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:11:57 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:11:57 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:11:57 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:11:57 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:11:57 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:11:57 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:11:58 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:11:58 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:11:58 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:11:58 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:11:58 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:11:58 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:11:58 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:11:58 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:11:58 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:11:58 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:11:58 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:11:58 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:11:58 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:11:58 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:11:58 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:11:58 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:11:58 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:58 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:58 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:58 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:58 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:58 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:11:58 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:11:58 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:11:58 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:11:58 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:11:58 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:11:58 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:11:58 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:11:58 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:11:58 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:11:58 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:11:58 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:11:58 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:11:58 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:11:58 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:11:58 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:11:58 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:11:58 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:11:58 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:11:58 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:11:58 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:11:58 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:11:59 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:11:59 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:11:59 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:11:59 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:11:59 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:12:00 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:12:00 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:12:00 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:12:00 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:12:00 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:12:00 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:12:00 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:12:00 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:12:00 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:12:00 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:12:00 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:12:00 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:12:00 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:12:00 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:12:00 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:12:00 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:12:00 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:12:00 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:12:00 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:12:00 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:12:00 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:12:00 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:12:00 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:12:00 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:12:00 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:12:00 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:12:00 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:12:00 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:12:00 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:12:00 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:12:00 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:12:00 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:12:00 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:12:00 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:12:00 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:12:00 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:12:00 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:12:00 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:12:00 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:12:00 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:12:00 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:12:01 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:12:01 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:12:01 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:12:01 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:12:01 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:12:01 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:12:01 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:12:01 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:12:01 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:12:01 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:12:01 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:12:01 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:12:01 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:12:01 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:12:01 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:12:01 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:12:01 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:12:01 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:12:01 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:12:01 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:12:01 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:12:01 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:12:01 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:12:01 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:12:03 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:12:03 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:12:03 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:12:04 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:12:04 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:12:04 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:12:04 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:12:04 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:12:04 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:12:04 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:12:04 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:12:04 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:12:04 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:12:04 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:12:04 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:12:04 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:12:04 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:12:04 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:12:04 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:12:04 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:12:04 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:12:04 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:12:04 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:12:04 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:12:04 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:12:04 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:12:04 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:12:04 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:12:04 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:12:04 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:12:04 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:12:04 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:12:04 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:12:04 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:12:04 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:12:04 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:12:04 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:12:04 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:12:04 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:12:04 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:12:04 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:12:04 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:12:04 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:12:04 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:12:04 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:12:04 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:12:04 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:12:04 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:12:04 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:12:04 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:12:04 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:12:04 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:12:04 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:12:04 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:12:04 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:12:04 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:12:04 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:12:04 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:12:04 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:12:04 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:12:04 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:12:05 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:12:05 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:12:05 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:12:05 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:12:05 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:12:05 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:12:05 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:12:08 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:12:08 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:12:08 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:12:08 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:12:08 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:12:08 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:12:08 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:12:08 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:12:08 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:12:08 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:12:08 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:12:08 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:12:08 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:12:08 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:12:08 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:12:08 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:12:08 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:12:08 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:12:08 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:12:08 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:12:08 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:12:08 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:12:08 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:12:09 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:12:09 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:12:09 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:12:09 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:12:09 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:12:09 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:12:09 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:12:09 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:12:09 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:12:09 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:12:09 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:12:09 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:12:09 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:12:09 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:12:09 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:12:09 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:12:09 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:12:09 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:12:09 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:12:09 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:12:09 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:12:09 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:12:09 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:12:09 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:12:09 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:12:09 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:12:09 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:12:09 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:12:09 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:12:09 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:12:09 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:12:09 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:12:09 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:12:09 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:12:09 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:12:09 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:12:09 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:12:09 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:12:09 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:12:09 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:12:09 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:12:09 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:12:09 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:12:10 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:12:10 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:12:10 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:12:10 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:12:13 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:12:13 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:12:13 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:12:13 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:12:14 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:12:14 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:12:14 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:12:14 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:12:14 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:12:14 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:12:14 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:12:14 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:12:14 - [TEST_STEP][PASSED] - xpath("/html/body/header/div/span[3]")).click(): null&#xD;
&#xD;
2019-08-23 18:12:14 - [TEST_STEP][PASSED] - Thread.sleep(2000): null&#xD;
&#xD;
2019-08-23 18:12:16 - [TEST_STEP][PASSED] - linkText("Sign Out")).click(): null&#xD;
&#xD;
2019-08-23 18:12:24 - [TEST_STEP][PASSED] - Thread.sleep(1000): null&#xD;
&#xD;
2019-08-23 18:12:25 - [TEST_STEP][PASSED] - action = new org.openqa.selenium.interactions.Actions(driver): null&#xD;
&#xD;
2019-08-23 18:12:25 - [TEST_STEP][PASSED] - build().perform(): null&#xD;
&#xD;
2019-08-23 18:12:25 - [TEST_STEP][PASSED] - Thread.sleep(2000): null&#xD;
&#xD;
2019-08-23 18:12:27 - [TEST_STEP][PASSED] - driver.quit(): null</system-out>
            <system-err></system-err>
        </testcase>
        <testcase name="Test Cases/Workilo/Bookings/Customer/CustomerALLOrders(All)" classname="Test Cases/Workilo/Bookings/Customer/CustomerALLOrders(All)" status="PASSED">
            <system-out>2019-08-23 18:12:28 - [TEST_CASE][PASSED] - Test Cases/Workilo/Bookings/Customer/CustomerALLOrders(All): Test Cases/Workilo/Bookings/Customer/CustomerALLOrders(All)&#xD;
&#xD;
2019-08-23 18:12:29 - [TEST_STEP][PASSED] - System.setProperty("webdriver.chrome.driver", chromePath): null&#xD;
&#xD;
2019-08-23 18:12:29 - [TEST_STEP][PASSED] - driver = new org.openqa.selenium.chrome.ChromeDriver(): null&#xD;
&#xD;
2019-08-23 18:12:31 - [TEST_STEP][PASSED] - window().maximize(): null&#xD;
&#xD;
2019-08-23 18:12:32 - [TEST_STEP][PASSED] - try: null&#xD;
&#xD;
2019-08-23 18:12:32 - [TEST_STEP][PASSED] - driver.get("http://workilo.com"): null&#xD;
&#xD;
2019-08-23 18:12:48 - [TEST_STEP][PASSED] - timeouts().implicitlyWait(30, SECONDS): null&#xD;
&#xD;
2019-08-23 18:12:48 - [TEST_STEP][PASSED] - linkText("Log In")).click(): null&#xD;
&#xD;
2019-08-23 18:12:49 - [TEST_STEP][PASSED] - Thread.sleep(2000): null&#xD;
&#xD;
2019-08-23 18:12:51 - [TEST_STEP][PASSED] - id("email_login")).sendKeys("nabin@digitalaptech.com"): null&#xD;
&#xD;
2019-08-23 18:12:51 - [TEST_STEP][PASSED] - id("password_login")).sendKeys("admin#123"): null&#xD;
&#xD;
2019-08-23 18:12:51 - [TEST_STEP][PASSED] - //*[@value='Log in']")).click(): null&#xD;
&#xD;
2019-08-23 18:12:51 - [TEST_STEP][PASSED] - Thread.sleep(3000): null&#xD;
&#xD;
2019-08-23 18:12:54 - [TEST_STEP][PASSED] - xpath("/html/body/header/div/div[2]/ul/li[1]/a")).click(): null&#xD;
&#xD;
2019-08-23 18:12:55 - [TEST_STEP][PASSED] - Thread.sleep(1000): null&#xD;
&#xD;
2019-08-23 18:12:56 - [TEST_STEP][PASSED] - xpath("/html/body/div[4]/div/div[1]/ul/li[2]/a")).click(): null&#xD;
&#xD;
2019-08-23 18:12:59 - [TEST_STEP][PASSED] - Thread.sleep(1000): null&#xD;
&#xD;
2019-08-23 18:13:00 - [TEST_STEP][PASSED] - xpath("/html/body/div[6]/div/div/div[1]/div/div/ul/li[5]/a")).click(): null&#xD;
&#xD;
2019-08-23 18:13:00 - [TEST_STEP][PASSED] - Thread.sleep(1000): null&#xD;
&#xD;
2019-08-23 18:13:01 - [TEST_STEP][PASSED] - message = xpath("/html/body/div[6]/div/div/div[1]/div/div/ul/li[5]/a")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:01 - [TEST_STEP][PASSED] - if (message.contains("(0)")): null&#xD;
&#xD;
2019-08-23 18:13:01 - [TEST_STEP][PASSED] - else: null&#xD;
&#xD;
2019-08-23 18:13:01 - [TEST_STEP][PASSED] - js = driver: null&#xD;
&#xD;
2019-08-23 18:13:01 - [TEST_STEP][PASSED] - rows = driver.findElements(By.xpath("//*[@id='tab-5']/table/tbody/tr")): null&#xD;
&#xD;
2019-08-23 18:13:01 - [TEST_STEP][PASSED] - out.println("Total Rows Size == " + rows.size()): null&#xD;
&#xD;
2019-08-23 18:13:01 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; rows.size(), (i++)]): null&#xD;
&#xD;
2019-08-23 18:13:01 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:13:01 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:01 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:02 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:02 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:02 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:02 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:02 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:13:02 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:13:02 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:13:02 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:13:02 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:13:02 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:13:02 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:13:02 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:13:02 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:13:02 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:13:02 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:13:02 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:13:02 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:13:02 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:13:02 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:13:02 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:13:02 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:13:02 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:13:02 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:13:02 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:13:02 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:13:02 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:13:02 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:13:02 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:13:02 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:13:02 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:02 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:02 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:02 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:02 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:02 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:02 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:13:02 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:13:02 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:13:03 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:13:03 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:13:03 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:13:03 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:13:03 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:13:03 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:13:03 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:13:03 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:13:03 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:13:03 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:13:03 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:13:03 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:13:03 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:13:03 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:13:03 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:13:03 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:13:03 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:13:03 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:13:03 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:13:03 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:13:03 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:13:03 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:13:03 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:03 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:03 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:03 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:03 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:03 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:03 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:13:03 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:13:03 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:13:03 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:13:03 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:13:03 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:13:03 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:13:03 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:13:03 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:13:03 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:13:03 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:13:03 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:13:03 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:13:03 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:13:03 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:13:03 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:13:03 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:13:03 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:13:03 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:13:03 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:13:03 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:13:03 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:13:03 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:13:03 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:13:03 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:13:03 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:03 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:03 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:03 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:04 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:04 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:04 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:13:04 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:13:04 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:13:04 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:13:04 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:13:04 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:13:04 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:13:04 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:13:04 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:13:04 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:13:04 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:13:04 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:13:04 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:13:04 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:13:04 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:13:04 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:13:04 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:13:04 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:13:04 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:13:04 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:13:04 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:13:04 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:13:04 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:13:04 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:13:04 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:13:04 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:04 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:04 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:04 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:04 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:04 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:04 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:13:04 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:13:04 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:13:04 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:13:04 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:13:04 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:13:04 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:13:04 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:13:04 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:13:04 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:13:05 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:13:05 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:13:05 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:13:05 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:13:05 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:13:05 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:13:05 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:13:05 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:13:05 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:13:05 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:13:05 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:13:05 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:13:05 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:13:05 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:13:05 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:13:05 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:05 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:05 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:05 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:05 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:05 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:05 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:13:05 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:13:05 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:13:05 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:13:05 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:13:05 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:13:05 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:13:05 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:13:05 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:13:05 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:13:05 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:13:05 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:13:05 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:13:05 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:13:05 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:13:05 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:13:05 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:13:05 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:13:05 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:13:05 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:13:05 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:13:05 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:13:05 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:13:05 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:13:05 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:13:05 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:05 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:05 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:05 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:05 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:05 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:05 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:13:06 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:13:06 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:13:06 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:13:06 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:13:06 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:13:06 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:13:06 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:13:06 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:13:06 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:13:06 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:13:06 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:13:06 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:13:06 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:13:06 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:13:06 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:13:06 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:13:06 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:13:06 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:13:06 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:13:06 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:13:06 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:13:06 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:13:06 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:13:06 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:13:06 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:06 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:06 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:06 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:06 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:06 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:06 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:13:06 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:13:06 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:13:06 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:13:06 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:13:06 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:13:06 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:13:06 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:13:06 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:13:06 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:13:06 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:13:06 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:13:06 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:13:06 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:13:06 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:13:06 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:13:06 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:13:06 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:13:06 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:13:06 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:13:06 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:13:06 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:13:06 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:13:06 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:13:06 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:13:06 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:07 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:07 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:07 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:07 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:07 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:07 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:13:07 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:13:07 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:13:07 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:13:07 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:13:07 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:13:07 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:13:07 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:13:07 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:13:07 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:13:07 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:13:07 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:13:07 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:13:07 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:13:07 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:13:07 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:13:07 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:13:07 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:13:07 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:13:07 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:13:07 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:13:07 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:13:07 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:13:07 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:13:07 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:13:07 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:07 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:07 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:07 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:07 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:07 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:07 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:13:07 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:13:07 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:13:07 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:13:08 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:13:08 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:13:08 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:13:08 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:13:08 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:13:08 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:13:08 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:13:08 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:13:08 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:13:08 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:13:08 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:13:08 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:13:08 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:13:08 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:13:08 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:13:08 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:13:08 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:13:08 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:13:08 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:13:08 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:13:08 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:13:08 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:08 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:08 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:08 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:08 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:08 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:08 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:13:08 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:13:08 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:13:08 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:13:08 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:13:08 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:13:08 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:13:08 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:13:08 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:13:08 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:13:08 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:13:08 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:13:08 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:13:08 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:13:08 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:13:08 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:13:08 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:13:08 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:13:08 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:13:08 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:13:08 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:13:08 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:13:08 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:13:08 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:13:08 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:13:08 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:08 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:08 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:08 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:09 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:09 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:09 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:13:09 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:13:09 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:13:09 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:13:09 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:13:09 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:13:09 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:13:09 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:13:09 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:13:09 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:13:09 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:13:09 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:13:09 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:13:09 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:13:09 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:13:09 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:13:09 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:13:09 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:13:09 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:13:09 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:13:09 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:13:09 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:13:09 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:13:09 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:13:09 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:13:09 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:09 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:09 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:09 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:09 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:09 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:09 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:13:09 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:13:09 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:13:09 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:13:09 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:13:09 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:13:09 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:13:09 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:13:09 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:13:09 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:13:09 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:13:10 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:13:10 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:13:10 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:13:10 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:13:10 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:13:10 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:13:10 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:13:10 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:13:10 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:13:10 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:13:10 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:13:10 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:13:10 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:13:10 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:13:10 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:10 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:10 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:10 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:10 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:10 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:10 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:13:10 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:13:10 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:13:10 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:13:10 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:13:10 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:13:10 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:13:10 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:13:10 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:13:10 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:13:10 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:13:10 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:13:10 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:13:10 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:13:10 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:13:10 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:13:10 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:13:10 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:13:10 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:13:10 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:13:10 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:13:10 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:13:12 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:13:12 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:13:12 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:13:12 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:12 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:12 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:12 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:12 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:12 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:12 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:13:12 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:13:12 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:13:12 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:13:12 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:13:12 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:13:12 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:13:12 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:13:12 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:13:12 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:13:12 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:13:12 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:13:12 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:13:12 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:13:12 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:13:12 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:13:12 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:13:12 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:13:12 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:13:13 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:13:13 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:13:13 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:13:13 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:13:13 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:13:13 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:13:13 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:13 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:13 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:14 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:14 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:14 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:14 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:13:14 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:13:14 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:13:14 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:13:14 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:13:14 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:13:14 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:13:14 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:13:14 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:13:14 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:13:14 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:13:14 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:13:14 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:13:14 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:13:14 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:13:14 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:13:14 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:13:14 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:13:14 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:13:14 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:13:14 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:13:14 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:13:14 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:13:14 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:13:14 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:13:14 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:14 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:14 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:14 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:14 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:16 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:16 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:13:16 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:13:16 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:13:16 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:13:16 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:13:16 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:13:16 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:13:16 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:13:16 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:13:16 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:13:17 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:13:17 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:13:17 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:13:17 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:13:17 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:13:17 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:13:17 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:13:17 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:13:17 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:13:17 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:13:17 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:13:17 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:13:17 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:13:17 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:13:17 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:13:17 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:17 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:18 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:18 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:18 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:18 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:18 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:13:18 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:13:18 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:13:18 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:13:18 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:13:18 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:13:18 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:13:18 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:13:18 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:13:18 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:13:18 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:13:18 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:13:18 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:13:18 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:13:18 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:13:18 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:13:18 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:13:18 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:13:18 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:13:18 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:13:18 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:13:18 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:13:18 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:13:18 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:13:18 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:13:18 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:18 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:19 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:19 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:19 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:19 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:19 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:13:19 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:13:19 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:13:19 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:13:19 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:13:21 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:13:21 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:13:21 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:13:21 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:13:21 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:13:21 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:13:21 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:13:21 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:13:21 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:13:21 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:13:21 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:13:21 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:13:21 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:13:21 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:13:21 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:13:21 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:13:21 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:13:21 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:13:21 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:13:21 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:13:21 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:21 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:21 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:21 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:22 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:22 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:22 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:13:22 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:13:24 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:13:24 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:13:24 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:13:24 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:13:24 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:13:24 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:13:24 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:13:24 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:13:24 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:13:24 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:13:24 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:13:24 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:13:24 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:13:24 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:13:24 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:13:24 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:13:24 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:13:24 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:13:24 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:13:24 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:13:24 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:13:24 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:13:24 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:13:24 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:24 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:24 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:24 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:24 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:24 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:24 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:13:24 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:13:24 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:13:24 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:13:24 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:13:24 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:13:24 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:13:24 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:13:24 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:13:24 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:13:24 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:13:24 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:13:24 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:13:27 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:13:27 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:13:27 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:13:27 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:13:27 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:13:27 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:13:27 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:13:27 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:13:27 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:13:27 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:13:27 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:13:27 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:13:27 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:27 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:27 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:27 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:28 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:28 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:28 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:13:28 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:13:28 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:13:28 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:13:28 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:13:28 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:13:28 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:13:28 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:13:28 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:13:30 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:13:30 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:13:30 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:13:30 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:13:30 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:13:30 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:13:30 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:13:30 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:13:30 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:13:30 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:13:30 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:13:30 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:13:30 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:13:30 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:13:30 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:13:30 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:13:30 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:30 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:30 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:30 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:30 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:30 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:30 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:13:30 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:13:30 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:13:30 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:13:30 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:13:30 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:13:30 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:13:30 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:13:30 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:13:30 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:13:30 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:13:30 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:13:30 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:13:30 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:13:30 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:13:30 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:13:30 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:13:30 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:13:30 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:13:30 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:13:30 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:13:34 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:13:34 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:13:34 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:13:34 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:13:34 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:34 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:34 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:34 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:34 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:34 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:34 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:13:34 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:13:34 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:13:34 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:13:34 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:13:34 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:13:34 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:13:34 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:13:34 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:13:35 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:13:35 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:13:35 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:13:35 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:13:35 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:13:35 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:13:35 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:13:35 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:13:37 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:13:37 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:13:37 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:13:37 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:13:37 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:13:37 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:13:37 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:13:37 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:13:37 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:37 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:37 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:37 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:37 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:37 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:37 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:13:37 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:13:37 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:13:37 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:13:37 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:13:37 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:13:37 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:13:37 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:13:37 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:13:37 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:13:37 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:13:37 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:13:37 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:13:37 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:13:37 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:13:37 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:13:37 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:13:37 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:13:37 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:13:37 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:13:37 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:13:37 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:13:37 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:13:37 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:13:37 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:13:37 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:37 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:38 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:38 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:42 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:42 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:42 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:13:42 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:13:42 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:13:42 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:13:42 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:13:42 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:13:42 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:13:42 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:13:42 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:13:42 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:13:42 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:13:42 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:13:42 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:13:42 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:13:42 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:13:42 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:13:42 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:13:42 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:13:42 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:13:42 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:13:42 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:13:42 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:13:42 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:13:42 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:13:42 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:13:44 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:45 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:45 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:45 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:45 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:45 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:45 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:13:45 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:13:45 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:13:45 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:13:45 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:13:45 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:13:45 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:13:45 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:13:45 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:13:45 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:13:45 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:13:45 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:13:45 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:13:45 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:13:45 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:13:45 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:13:45 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:13:45 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:13:45 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:13:45 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:13:45 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:13:45 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:13:45 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:13:45 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:13:45 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:13:45 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:45 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:45 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:45 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:45 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:45 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:45 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:13:45 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:13:45 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:13:45 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:13:49 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:13:49 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:13:49 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:13:49 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:13:49 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:13:49 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:13:49 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:13:49 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:13:49 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:13:49 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:13:49 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:13:49 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:13:49 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:13:49 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:13:49 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:13:49 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:13:49 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:13:49 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:13:49 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:13:49 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:13:49 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:13:49 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:50 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:50 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:50 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:50 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:50 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:50 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:13:53 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:13:53 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:13:53 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:13:53 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:13:53 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:13:53 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:13:53 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:13:53 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:13:53 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:13:53 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:13:53 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:13:53 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:13:53 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:13:53 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:13:53 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:13:53 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:13:53 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:13:53 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:13:53 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:13:53 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:13:53 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:13:53 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:13:53 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:13:53 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:13:53 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:53 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:53 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:53 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:53 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:53 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:53 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:13:53 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:13:53 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:13:53 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:13:53 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:13:53 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:13:53 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:13:53 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:13:53 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:13:53 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:13:53 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:13:58 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:13:58 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:13:58 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:13:58 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:13:58 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:13:58 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:13:58 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:13:58 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:13:58 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:13:58 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:13:58 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:13:58 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:13:58 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:13:58 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:13:58 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:58 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:58 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:59 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:59 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:59 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:13:59 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:13:59 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:13:59 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:13:59 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:13:59 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:13:59 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:13:59 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:13:59 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:14:02 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:14:02 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:14:02 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:14:02 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:14:02 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:14:02 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:14:02 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:14:02 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:14:02 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:14:02 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:14:02 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:14:02 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:14:02 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:14:02 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:14:02 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:14:02 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:14:02 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:14:02 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:02 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:02 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:02 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:02 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:02 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:02 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:14:02 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:14:02 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:14:02 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:14:02 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:14:02 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:14:02 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:14:02 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:14:02 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:14:02 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:14:02 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:14:02 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:14:02 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:14:02 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:14:02 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:14:02 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:14:02 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:14:02 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:14:02 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:14:08 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:14:08 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:14:08 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:14:08 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:14:08 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:14:08 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:14:08 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:08 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:08 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:08 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:08 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:08 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:08 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:14:08 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:14:08 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:14:08 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:14:08 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:14:08 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:14:08 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:14:08 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:14:08 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:14:08 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:14:08 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:14:08 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:14:08 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:14:08 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:14:08 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:14:08 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:14:11 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:14:11 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:14:11 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:14:11 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:14:11 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:14:11 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:14:11 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:14:11 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:14:11 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:14:11 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:11 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:11 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:11 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:11 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:11 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:12 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:14:12 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:14:12 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:14:12 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:14:12 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:14:12 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:14:12 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:14:12 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:14:12 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:14:12 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:14:12 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:14:12 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:14:12 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:14:12 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:14:12 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:14:12 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:14:12 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:14:12 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:14:12 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:14:12 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:14:12 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:14:12 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:14:12 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:14:12 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:14:12 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:14:12 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:12 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:17 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:18 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:18 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:18 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:18 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:14:18 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:14:18 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:14:18 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:14:18 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:14:18 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:14:18 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:14:18 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:14:18 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:14:18 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:14:18 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:14:18 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:14:18 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:14:18 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:14:18 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:14:18 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:14:18 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:14:18 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:14:18 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:14:18 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:14:18 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:14:18 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:14:18 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:14:18 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:14:22 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:14:22 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:22 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:22 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:22 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:22 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:22 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:22 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:14:22 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:14:22 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:14:22 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:14:22 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:14:22 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:14:22 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:14:22 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:14:22 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:14:22 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:14:22 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:14:22 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:14:22 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:14:22 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:14:22 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:14:22 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:14:22 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:14:22 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:14:22 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:14:22 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:14:22 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:14:22 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:14:22 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:14:22 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:14:22 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:14:22 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:22 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:22 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:22 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:22 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:22 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:23 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:14:23 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:14:23 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:14:28 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:14:28 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:14:28 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:14:28 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:14:28 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:14:28 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:14:28 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:14:28 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:14:28 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:14:28 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:14:28 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:14:28 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:14:28 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:14:28 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:14:28 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:14:28 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:14:28 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:14:28 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:14:28 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:14:28 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:14:28 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:14:28 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:14:28 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:28 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:29 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:29 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:29 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:29 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:33 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:14:33 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:14:33 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:14:33 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:14:33 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:14:33 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:14:33 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:14:33 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:14:33 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:14:33 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:14:33 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:14:33 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:14:33 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:14:33 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:14:33 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:14:33 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:14:33 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:14:33 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:14:33 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:14:33 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:14:33 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:14:33 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:14:33 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:14:33 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:14:33 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:14:33 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:33 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:33 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:33 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:33 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:33 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:33 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:14:33 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:14:33 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:14:33 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:14:33 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:14:33 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:14:33 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:14:33 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:14:33 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:14:33 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:14:40 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:14:40 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:14:40 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:14:40 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:14:40 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:14:40 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:14:40 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:14:40 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:14:40 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:14:40 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:14:40 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:14:40 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:14:40 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:14:40 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:14:40 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:14:40 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:40 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:40 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:40 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:40 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:40 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:40 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:14:40 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:14:40 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:14:40 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:14:40 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:14:40 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:14:40 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:14:45 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:14:45 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:14:45 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:14:45 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:14:45 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:14:45 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:14:45 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:14:45 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:14:45 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:14:45 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:14:45 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:14:45 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:14:45 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:14:45 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:14:45 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:14:45 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:14:45 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:14:45 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:14:45 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:45 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:45 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:45 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:45 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:45 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:45 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:14:45 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:14:45 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:14:45 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:14:45 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:14:45 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:14:45 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:14:45 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:14:45 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:14:45 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:14:45 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:14:45 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:14:45 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:14:45 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:14:45 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:14:45 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:14:45 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:14:45 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:14:52 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:14:52 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:14:52 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:14:52 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:14:52 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:14:52 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:14:52 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:14:52 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:53 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:53 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:53 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:53 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:53 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:53 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:14:53 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:14:53 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:14:53 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:14:53 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:14:53 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:14:53 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:14:53 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:14:53 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:14:53 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:14:53 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:14:53 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:14:53 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:14:53 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:14:57 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:14:57 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:14:57 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:14:57 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:14:57 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:14:57 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:14:57 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:14:57 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:14:57 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:14:57 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:14:57 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:14:57 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:57 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:57 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:57 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:58 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:58 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:14:58 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:14:58 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:14:58 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:14:58 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:14:58 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:14:58 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:14:58 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:14:58 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:14:58 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:14:58 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:14:58 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:14:58 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:14:58 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:14:58 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:14:58 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:14:58 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:14:58 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:14:58 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:14:58 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:14:58 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:14:58 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:14:58 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:14:58 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:14:58 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:14:58 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:14:58 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:15:06 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:15:06 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:15:06 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:15:06 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:15:06 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:15:06 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:15:06 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:15:06 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:15:06 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:15:06 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:15:06 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-5']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:15:06 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:15:06 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:15:06 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:15:06 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:15:06 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:15:06 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:15:06 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:15:06 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:15:06 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:15:06 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:15:06 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:15:06 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:15:06 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:15:06 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:15:06 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:15:06 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:15:11 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:15:11 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:15:11 - [TEST_STEP][PASSED] - Thread.sleep(2000): null&#xD;
&#xD;
2019-08-23 18:15:13 - [TEST_STEP][PASSED] - xpath("/html/body/header/div/span[3]")).click(): null&#xD;
&#xD;
2019-08-23 18:15:13 - [TEST_STEP][PASSED] - Thread.sleep(2000): null&#xD;
&#xD;
2019-08-23 18:15:15 - [TEST_STEP][PASSED] - linkText("Sign Out")).click(): null&#xD;
&#xD;
2019-08-23 18:15:25 - [TEST_STEP][PASSED] - Thread.sleep(1000): null&#xD;
&#xD;
2019-08-23 18:15:26 - [TEST_STEP][PASSED] - action = new org.openqa.selenium.interactions.Actions(driver): null&#xD;
&#xD;
2019-08-23 18:15:26 - [TEST_STEP][PASSED] - build().perform(): null&#xD;
&#xD;
2019-08-23 18:15:26 - [TEST_STEP][PASSED] - Thread.sleep(2000): null&#xD;
&#xD;
2019-08-23 18:15:28 - [TEST_STEP][PASSED] - driver.quit(): null</system-out>
            <system-err></system-err>
        </testcase>
        <testcase name="Test Cases/Workilo/Bookings/Customer/CustomerAcceptedRequest(All)" classname="Test Cases/Workilo/Bookings/Customer/CustomerAcceptedRequest(All)" status="PASSED">
            <system-out>2019-08-23 18:15:29 - [TEST_CASE][PASSED] - Test Cases/Workilo/Bookings/Customer/CustomerAcceptedRequest(All): Test Cases/Workilo/Bookings/Customer/CustomerAcceptedRequest(All)&#xD;
&#xD;
2019-08-23 18:15:30 - [TEST_STEP][PASSED] - System.setProperty("webdriver.chrome.driver", chromePath): null&#xD;
&#xD;
2019-08-23 18:15:30 - [TEST_STEP][PASSED] - driver = new org.openqa.selenium.chrome.ChromeDriver(): null&#xD;
&#xD;
2019-08-23 18:15:32 - [TEST_STEP][PASSED] - window().maximize(): null&#xD;
&#xD;
2019-08-23 18:15:33 - [TEST_STEP][PASSED] - try: null&#xD;
&#xD;
2019-08-23 18:15:33 - [TEST_STEP][PASSED] - driver.get("http://workilo.com"): null&#xD;
&#xD;
2019-08-23 18:15:43 - [TEST_STEP][PASSED] - timeouts().implicitlyWait(30, SECONDS): null&#xD;
&#xD;
2019-08-23 18:15:43 - [TEST_STEP][PASSED] - linkText("Log In")).click(): null&#xD;
&#xD;
2019-08-23 18:15:44 - [TEST_STEP][PASSED] - Thread.sleep(2000): null&#xD;
&#xD;
2019-08-23 18:15:46 - [TEST_STEP][PASSED] - id("email_login")).sendKeys("nabin@digitalaptech.com"): null&#xD;
&#xD;
2019-08-23 18:15:46 - [TEST_STEP][PASSED] - id("password_login")).sendKeys("admin#123"): null&#xD;
&#xD;
2019-08-23 18:15:46 - [TEST_STEP][PASSED] - //*[@value='Log in']")).click(): null&#xD;
&#xD;
2019-08-23 18:15:46 - [TEST_STEP][PASSED] - Thread.sleep(3000): null&#xD;
&#xD;
2019-08-23 18:15:49 - [TEST_STEP][PASSED] - xpath("/html/body/header/div/div[2]/ul/li[1]/a")).click(): null&#xD;
&#xD;
2019-08-23 18:15:49 - [TEST_STEP][PASSED] - Thread.sleep(1000): null&#xD;
&#xD;
2019-08-23 18:15:50 - [TEST_STEP][PASSED] - xpath("/html/body/div[4]/div/div[1]/ul/li[2]/a")).click(): null&#xD;
&#xD;
2019-08-23 18:15:52 - [TEST_STEP][PASSED] - Thread.sleep(1000): null&#xD;
&#xD;
2019-08-23 18:15:53 - [TEST_STEP][PASSED] - xpath("/html/body/div[6]/div/div/div[1]/div/div/ul/li[2]/a")).click(): null&#xD;
&#xD;
2019-08-23 18:15:53 - [TEST_STEP][PASSED] - Thread.sleep(1000): null&#xD;
&#xD;
2019-08-23 18:15:54 - [TEST_STEP][PASSED] - message = xpath("/html/body/div[6]/div/div/div[1]/div/div/ul/li[2]/a")).getText(): null&#xD;
&#xD;
2019-08-23 18:15:54 - [TEST_STEP][PASSED] - if (message.contains("(0)")): null&#xD;
&#xD;
2019-08-23 18:15:54 - [TEST_STEP][PASSED] - else: null&#xD;
&#xD;
2019-08-23 18:15:54 - [TEST_STEP][PASSED] - js = driver: null&#xD;
&#xD;
2019-08-23 18:15:54 - [TEST_STEP][PASSED] - rows = driver.findElements(By.xpath("//*[@id='tab-2']/table/tbody/tr")): null&#xD;
&#xD;
2019-08-23 18:15:54 - [TEST_STEP][PASSED] - out.println("Total Rows Size == " + rows.size()): null&#xD;
&#xD;
2019-08-23 18:15:54 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; rows.size(), (i++)]): null&#xD;
&#xD;
2019-08-23 18:15:54 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:15:54 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:15:54 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:15:54 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:15:54 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:15:54 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:15:54 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:15:54 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:15:54 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:15:54 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:15:54 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:15:54 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:15:54 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:15:55 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:15:55 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:15:55 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:15:55 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:15:55 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:15:55 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:15:55 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:15:55 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:15:55 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:15:55 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:15:55 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:15:55 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:15:55 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:15:55 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:15:55 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:15:55 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:15:55 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:15:55 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:15:55 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:15:55 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:15:55 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:15:55 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:15:55 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:15:55 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:15:55 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:15:55 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:15:55 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:15:55 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:15:55 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:15:55 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:15:55 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:15:55 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:15:55 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:15:55 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:15:55 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:15:55 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:15:55 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:15:55 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:15:55 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:15:55 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:15:55 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:15:55 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:15:55 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:15:55 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:15:55 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:15:55 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:15:55 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:15:55 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:15:55 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:15:55 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:15:55 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:15:55 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:15:55 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:15:55 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:15:55 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:15:55 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:15:56 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:15:56 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:15:56 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:15:56 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:15:56 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:15:56 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:15:56 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:15:56 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:15:56 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:15:56 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:15:56 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:15:56 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:15:56 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:15:56 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:15:56 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:15:56 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:15:56 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:15:56 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:15:56 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:15:56 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:15:56 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:15:56 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:15:56 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:15:56 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:15:56 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:15:56 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:15:56 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:15:56 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:15:56 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:15:56 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:15:56 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:15:56 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:15:56 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:15:56 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:15:56 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:15:56 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:15:56 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:15:56 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:15:56 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:15:56 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:15:56 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:15:56 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:15:56 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:15:56 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:15:56 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:15:56 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:15:56 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:15:56 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:15:56 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:15:56 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:15:56 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:15:56 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:15:56 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:15:56 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:15:56 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:15:56 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:15:56 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:15:56 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:15:56 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:15:56 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:15:57 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:15:57 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:15:57 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:15:57 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:15:57 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:15:57 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:15:57 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:15:57 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:15:57 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:15:57 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:15:57 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:15:57 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:15:57 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:15:57 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:15:57 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:15:57 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:15:57 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:15:57 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:15:57 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:15:57 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:15:57 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:15:57 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:15:57 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:15:57 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:15:57 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:15:57 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:15:57 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:15:57 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:15:57 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:15:57 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:15:57 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:15:57 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:15:57 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:15:57 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:15:57 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:15:57 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:15:57 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:15:57 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:15:57 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:15:57 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:15:57 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:15:58 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:15:58 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:15:58 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:15:58 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:15:58 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:15:58 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:15:58 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:15:58 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:15:58 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:15:58 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:15:58 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:15:58 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:15:58 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:15:58 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:15:58 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:15:58 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:15:58 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:15:58 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:15:58 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:15:58 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:15:58 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:15:58 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:15:58 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:15:58 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:15:58 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:15:58 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:15:58 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:15:58 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:15:58 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:15:58 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:15:58 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:15:58 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:15:58 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:15:58 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:15:58 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:15:58 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:15:58 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:15:58 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:15:58 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:15:58 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:15:58 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:15:58 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:15:58 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:15:58 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:15:58 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:15:58 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:15:58 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:15:58 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:16:03 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:16:04 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:16:04 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:16:04 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:16:04 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:16:04 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:16:04 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:16:04 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:16:04 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:16:04 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:16:04 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:16:04 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-2']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:16:04 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:16:04 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:16:04 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:16:04 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:16:04 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:16:04 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:16:04 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:16:04 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:16:04 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:16:04 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:16:04 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:16:04 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:16:04 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:16:04 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:16:04 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:16:04 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:16:04 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:16:04 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:16:04 - [TEST_STEP][PASSED] - Thread.sleep(2000): null&#xD;
&#xD;
2019-08-23 18:16:06 - [TEST_STEP][PASSED] - xpath("/html/body/header/div/span[3]")).click(): null&#xD;
&#xD;
2019-08-23 18:16:06 - [TEST_STEP][PASSED] - Thread.sleep(2000): null&#xD;
&#xD;
2019-08-23 18:16:08 - [TEST_STEP][PASSED] - linkText("Sign Out")).click(): null&#xD;
&#xD;
2019-08-23 18:16:12 - [TEST_STEP][PASSED] - Thread.sleep(1000): null&#xD;
&#xD;
2019-08-23 18:16:13 - [TEST_STEP][PASSED] - action = new org.openqa.selenium.interactions.Actions(driver): null&#xD;
&#xD;
2019-08-23 18:16:13 - [TEST_STEP][PASSED] - build().perform(): null&#xD;
&#xD;
2019-08-23 18:16:13 - [TEST_STEP][PASSED] - Thread.sleep(2000): null</system-out>
            <system-err></system-err>
        </testcase>
        <testcase name="Test Cases/Workilo/Bookings/Customer/CancelOrder(All)" classname="Test Cases/Workilo/Bookings/Customer/CancelOrder(All)" status="PASSED">
            <system-out>2019-08-23 18:16:15 - [TEST_CASE][PASSED] - Test Cases/Workilo/Bookings/Customer/CancelOrder(All): Test Cases/Workilo/Bookings/Customer/CancelOrder(All)&#xD;
&#xD;
2019-08-23 18:16:16 - [TEST_STEP][PASSED] - System.setProperty("webdriver.chrome.driver", chromePath): null&#xD;
&#xD;
2019-08-23 18:16:16 - [TEST_STEP][PASSED] - driver = new org.openqa.selenium.chrome.ChromeDriver(): null&#xD;
&#xD;
2019-08-23 18:16:18 - [TEST_STEP][PASSED] - window().maximize(): null&#xD;
&#xD;
2019-08-23 18:16:19 - [TEST_STEP][PASSED] - driver.get("http://workilo.com"): null&#xD;
&#xD;
2019-08-23 18:16:38 - [TEST_STEP][PASSED] - try: null&#xD;
&#xD;
2019-08-23 18:16:38 - [TEST_STEP][PASSED] - timeouts().implicitlyWait(30, SECONDS): null&#xD;
&#xD;
2019-08-23 18:16:38 - [TEST_STEP][PASSED] - linkText("Log In")).click(): null&#xD;
&#xD;
2019-08-23 18:16:38 - [TEST_STEP][PASSED] - Thread.sleep(2000): null&#xD;
&#xD;
2019-08-23 18:16:40 - [TEST_STEP][PASSED] - id("email_login")).sendKeys("nabin@digitalaptech.com"): null&#xD;
&#xD;
2019-08-23 18:16:40 - [TEST_STEP][PASSED] - id("password_login")).sendKeys("admin#123"): null&#xD;
&#xD;
2019-08-23 18:16:40 - [TEST_STEP][PASSED] - //*[@value='Log in']")).click(): null&#xD;
&#xD;
2019-08-23 18:16:41 - [TEST_STEP][PASSED] - Thread.sleep(3000): null&#xD;
&#xD;
2019-08-23 18:16:44 - [TEST_STEP][PASSED] - xpath("/html/body/header/div/div[2]/ul/li[1]/a")).click(): null&#xD;
&#xD;
2019-08-23 18:16:48 - [TEST_STEP][PASSED] - Thread.sleep(1000): null&#xD;
&#xD;
2019-08-23 18:16:49 - [TEST_STEP][PASSED] - xpath("/html/body/div[4]/div/div[1]/ul/li[1]/a")).click(): null&#xD;
&#xD;
2019-08-23 18:16:52 - [TEST_STEP][PASSED] - Thread.sleep(1000): null&#xD;
&#xD;
2019-08-23 18:16:53 - [TEST_STEP][PASSED] - action = new org.openqa.selenium.interactions.Actions(driver): null&#xD;
&#xD;
2019-08-23 18:16:53 - [TEST_STEP][PASSED] - js = driver: null&#xD;
&#xD;
2019-08-23 18:16:53 - [TEST_STEP][PASSED] - xpath("/html[1]/body[1]/div[6]/div[1]/div[1]/div[2]/div[1]/div[1]/table[1]/tbody[1]/tr[1]/td[4]/a[1]/div[1]")).click(): null&#xD;
&#xD;
2019-08-23 18:16:57 - [TEST_STEP][PASSED] - element = driver.findElements(By.xpath("/html[1]/body[1]/div[6]/div[1]/div[1]/div[2]/div[1]/div[1]/ul[1]/li[1]/a[1]")): null&#xD;
&#xD;
2019-08-23 18:16:57 - [TEST_STEP][PASSED] - if (element.size() == 0): null&#xD;
&#xD;
2019-08-23 18:16:57 - [TEST_STEP][PASSED] - else: null&#xD;
&#xD;
2019-08-23 18:16:57 - [TEST_STEP][PASSED] - Thread.sleep(2000): null&#xD;
&#xD;
2019-08-23 18:16:59 - [TEST_STEP][PASSED] - xpath("/html[1]/body[1]/div[6]/div[1]/div[1]/div[2]/div[1]/div[1]/ul[1]/li[1]/a[1]")).click(): null&#xD;
&#xD;
2019-08-23 18:16:59 - [TEST_STEP][PASSED] - Thread.sleep(2000): null&#xD;
&#xD;
2019-08-23 18:17:01 - [TEST_STEP][PASSED] - xpath("//*[@id='cancel_order_form']/div[2]/ul/li[1]/label/span")).click(): null&#xD;
&#xD;
2019-08-23 18:17:01 - [TEST_STEP][PASSED] - Thread.sleep(1000): null&#xD;
&#xD;
2019-08-23 18:17:02 - [TEST_STEP][PASSED] - xpath("/html[1]/body[1]/div[9]/form[1]/div[4]/input[2]")).click(): null&#xD;
&#xD;
2019-08-23 18:17:04 - [TEST_STEP][PASSED] - Thread.sleep(2000): null&#xD;
&#xD;
2019-08-23 18:17:06 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", driver.findElement(By.xpath("/html[1]/body[1]/div[6]/div[1]/div[1]/div[2]/div[1]/span[1]"))): null&#xD;
&#xD;
2019-08-23 18:17:06 - [TEST_STEP][PASSED] - Thread.sleep(1000): null&#xD;
&#xD;
2019-08-23 18:17:07 - [TEST_STEP][PASSED] - xpath("/html/body/header/div/span[3]")).click(): null&#xD;
&#xD;
2019-08-23 18:17:08 - [TEST_STEP][PASSED] - Thread.sleep(2000): null&#xD;
&#xD;
2019-08-23 18:17:10 - [TEST_STEP][PASSED] - linkText("Sign Out")).click(): null&#xD;
&#xD;
2019-08-23 18:17:16 - [TEST_STEP][PASSED] - Thread.sleep(1000): null&#xD;
&#xD;
2019-08-23 18:17:17 - [TEST_STEP][PASSED] - build().perform(): null&#xD;
&#xD;
2019-08-23 18:17:17 - [TEST_STEP][PASSED] - Thread.sleep(2000): null&#xD;
&#xD;
2019-08-23 18:17:19 - [TEST_STEP][PASSED] - driver.quit(): null</system-out>
            <system-err></system-err>
        </testcase>
        <testcase name="Test Cases/Workilo/Bookings/Customer/CustomerDeclined(All)" classname="Test Cases/Workilo/Bookings/Customer/CustomerDeclined(All)" status="PASSED">
            <system-out>2019-08-23 18:17:20 - [TEST_CASE][PASSED] - Test Cases/Workilo/Bookings/Customer/CustomerDeclined(All): Test Cases/Workilo/Bookings/Customer/CustomerDeclined(All)&#xD;
&#xD;
2019-08-23 18:17:20 - [TEST_STEP][PASSED] - System.setProperty("webdriver.chrome.driver", chromePath): null&#xD;
&#xD;
2019-08-23 18:17:20 - [TEST_STEP][PASSED] - driver = new org.openqa.selenium.chrome.ChromeDriver(): null&#xD;
&#xD;
2019-08-23 18:17:22 - [TEST_STEP][PASSED] - window().maximize(): null&#xD;
&#xD;
2019-08-23 18:17:24 - [TEST_STEP][PASSED] - try: null&#xD;
&#xD;
2019-08-23 18:17:24 - [TEST_STEP][PASSED] - driver.get("http://workilo.com"): null&#xD;
&#xD;
2019-08-23 18:17:31 - [TEST_STEP][PASSED] - timeouts().implicitlyWait(30, SECONDS): null&#xD;
&#xD;
2019-08-23 18:17:31 - [TEST_STEP][PASSED] - linkText("Log In")).click(): null&#xD;
&#xD;
2019-08-23 18:17:31 - [TEST_STEP][PASSED] - Thread.sleep(2000): null&#xD;
&#xD;
2019-08-23 18:17:33 - [TEST_STEP][PASSED] - id("email_login")).sendKeys("nabin@digitalaptech.com"): null&#xD;
&#xD;
2019-08-23 18:17:34 - [TEST_STEP][PASSED] - id("password_login")).sendKeys("admin#123"): null&#xD;
&#xD;
2019-08-23 18:17:34 - [TEST_STEP][PASSED] - //*[@value='Log in']")).click(): null&#xD;
&#xD;
2019-08-23 18:17:34 - [TEST_STEP][PASSED] - Thread.sleep(3000): null&#xD;
&#xD;
2019-08-23 18:17:37 - [TEST_STEP][PASSED] - xpath("/html/body/header/div/div[2]/ul/li[1]/a")).click(): null&#xD;
&#xD;
2019-08-23 18:17:38 - [TEST_STEP][PASSED] - Thread.sleep(1000): null&#xD;
&#xD;
2019-08-23 18:17:39 - [TEST_STEP][PASSED] - xpath("/html/body/div[4]/div/div[1]/ul/li[2]/a")).click(): null&#xD;
&#xD;
2019-08-23 18:17:40 - [TEST_STEP][PASSED] - Thread.sleep(1000): null&#xD;
&#xD;
2019-08-23 18:17:41 - [TEST_STEP][PASSED] - xpath("/html/body/div[6]/div/div/div[1]/div/div/ul/li[4]/a")).click(): null&#xD;
&#xD;
2019-08-23 18:17:41 - [TEST_STEP][PASSED] - Thread.sleep(1000): null&#xD;
&#xD;
2019-08-23 18:17:42 - [TEST_STEP][PASSED] - message = xpath("/html/body/div[6]/div/div/div[1]/div/div/ul/li[4]/a")).getText(): null&#xD;
&#xD;
2019-08-23 18:17:42 - [TEST_STEP][PASSED] - if (message.contains("(0)")): null&#xD;
&#xD;
2019-08-23 18:17:42 - [TEST_STEP][PASSED] - else: null&#xD;
&#xD;
2019-08-23 18:17:42 - [TEST_STEP][PASSED] - js = driver: null&#xD;
&#xD;
2019-08-23 18:17:42 - [TEST_STEP][PASSED] - js.executeScript("window.scrollTo(0, document.body.scrollHeight)"): null&#xD;
&#xD;
2019-08-23 18:17:42 - [TEST_STEP][PASSED] - rows = driver.findElements(By.xpath("//*[@id='tab-4']/table/tbody/tr")): null&#xD;
&#xD;
2019-08-23 18:17:42 - [TEST_STEP][PASSED] - out.println("Total Rows Size == " + rows.size()): null&#xD;
&#xD;
2019-08-23 18:17:42 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; rows.size(), (i++)]): null&#xD;
&#xD;
2019-08-23 18:17:42 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:17:42 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-4']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:17:42 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-4']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:17:42 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-4']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:17:42 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-4']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:17:43 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-4']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:17:43 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-4']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:17:43 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-4']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:17:43 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-4']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:17:43 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-4']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:17:43 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-4']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:17:43 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-4']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:17:43 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-4']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:17:43 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:17:43 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:17:43 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:17:43 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:17:43 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:17:43 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:17:43 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:17:43 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:17:43 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:17:43 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:17:43 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:17:43 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:17:43 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:17:43 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:17:43 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:17:43 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:17:43 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:17:43 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:17:43 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:17:43 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-4']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:17:43 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-4']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:17:43 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-4']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:17:43 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-4']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:17:43 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-4']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:17:43 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-4']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:17:43 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-4']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:17:43 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-4']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:17:43 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-4']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:17:43 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-4']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:17:43 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-4']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:17:43 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-4']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:17:43 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:17:43 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:17:43 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:17:44 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:17:44 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:17:44 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:17:44 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:17:44 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:17:44 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:17:44 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:17:44 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:17:44 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:17:44 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:17:44 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:17:44 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:17:44 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:17:44 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:17:44 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:17:44 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:17:44 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-4']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:17:44 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-4']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:17:44 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-4']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:17:44 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-4']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:17:44 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-4']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:17:44 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-4']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:17:44 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-4']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:17:44 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-4']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:17:44 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-4']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:17:44 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-4']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:17:44 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-4']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:17:44 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-4']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:17:44 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:17:44 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:17:44 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:17:44 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:17:44 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:17:44 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:17:44 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:17:44 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:17:44 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:17:44 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:17:44 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:17:44 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:17:44 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:17:44 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:17:44 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:17:44 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:17:44 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:17:44 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:17:44 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:17:44 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-4']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:17:44 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-4']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:17:44 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-4']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:17:44 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-4']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:17:44 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-4']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:17:44 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-4']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:17:44 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-4']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:17:44 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-4']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:17:44 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-4']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:17:44 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-4']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:17:44 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-4']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:17:44 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-4']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:17:45 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:17:45 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:17:45 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:17:45 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:17:45 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:17:45 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:17:45 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:17:45 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:17:45 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:17:45 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:17:45 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:17:45 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:17:45 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:17:45 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:17:45 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:17:45 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:17:45 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:17:45 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:17:45 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:17:45 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-4']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:17:45 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-4']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:17:45 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-4']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:17:45 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-4']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:17:45 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-4']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:17:45 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-4']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:17:45 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-4']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:17:45 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-4']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:17:45 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-4']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:17:45 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-4']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:17:45 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-4']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:17:45 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-4']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:17:45 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:17:45 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:17:45 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:17:45 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:17:45 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:17:45 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:17:45 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:17:45 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:17:45 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:17:45 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:17:45 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:17:45 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:17:45 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:17:45 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:17:45 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:17:45 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:17:45 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:17:45 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:17:45 - [TEST_STEP][PASSED] - Thread.sleep(2000): null&#xD;
&#xD;
2019-08-23 18:17:47 - [TEST_STEP][PASSED] - xpath("/html/body/header/div/span[3]")).click(): null&#xD;
&#xD;
2019-08-23 18:17:47 - [TEST_STEP][PASSED] - Thread.sleep(2000): null&#xD;
&#xD;
2019-08-23 18:17:49 - [TEST_STEP][PASSED] - linkText("Sign Out")).click(): null&#xD;
&#xD;
2019-08-23 18:17:57 - [TEST_STEP][PASSED] - Thread.sleep(1000): null&#xD;
&#xD;
2019-08-23 18:17:58 - [TEST_STEP][PASSED] - action = new org.openqa.selenium.interactions.Actions(driver): null&#xD;
&#xD;
2019-08-23 18:17:58 - [TEST_STEP][PASSED] - build().perform(): null&#xD;
&#xD;
2019-08-23 18:17:59 - [TEST_STEP][PASSED] - Thread.sleep(2000): null&#xD;
&#xD;
2019-08-23 18:18:01 - [TEST_STEP][PASSED] - driver.quit(): null</system-out>
            <system-err></system-err>
        </testcase>
        <testcase name="Test Cases/Workilo/Bookings/Customer/CustomerOrderCompleted(ALL)" classname="Test Cases/Workilo/Bookings/Customer/CustomerOrderCompleted(ALL)" status="PASSED">
            <system-out>2019-08-23 18:18:02 - [TEST_CASE][PASSED] - Test Cases/Workilo/Bookings/Customer/CustomerOrderCompleted(ALL): Test Cases/Workilo/Bookings/Customer/CustomerOrderCompleted(ALL)&#xD;
&#xD;
2019-08-23 18:18:02 - [TEST_STEP][PASSED] - System.setProperty("webdriver.chrome.driver", chromePath): null&#xD;
&#xD;
2019-08-23 18:18:02 - [TEST_STEP][PASSED] - driver = new org.openqa.selenium.chrome.ChromeDriver(): null&#xD;
&#xD;
2019-08-23 18:18:04 - [TEST_STEP][PASSED] - window().maximize(): null&#xD;
&#xD;
2019-08-23 18:18:05 - [TEST_STEP][PASSED] - try: null&#xD;
&#xD;
2019-08-23 18:18:05 - [TEST_STEP][PASSED] - driver.get("http://workilo.com"): null&#xD;
&#xD;
2019-08-23 18:18:22 - [TEST_STEP][PASSED] - timeouts().implicitlyWait(30, SECONDS): null&#xD;
&#xD;
2019-08-23 18:18:22 - [TEST_STEP][PASSED] - linkText("Log In")).click(): null&#xD;
&#xD;
2019-08-23 18:18:27 - [TEST_STEP][PASSED] - Thread.sleep(2000): null&#xD;
&#xD;
2019-08-23 18:18:29 - [TEST_STEP][PASSED] - id("email_login")).sendKeys("nabin@digitalaptech.com"): null&#xD;
&#xD;
2019-08-23 18:18:29 - [TEST_STEP][PASSED] - id("password_login")).sendKeys("admin#123"): null&#xD;
&#xD;
2019-08-23 18:18:29 - [TEST_STEP][PASSED] - //*[@value='Log in']")).click(): null&#xD;
&#xD;
2019-08-23 18:18:34 - [TEST_STEP][PASSED] - Thread.sleep(3000): null&#xD;
&#xD;
2019-08-23 18:18:37 - [TEST_STEP][PASSED] - xpath("/html/body/header/div/div[2]/ul/li[1]/a")).click(): null&#xD;
&#xD;
2019-08-23 18:18:45 - [TEST_STEP][PASSED] - Thread.sleep(1000): null&#xD;
&#xD;
2019-08-23 18:18:46 - [TEST_STEP][PASSED] - xpath("/html/body/div[4]/div/div[1]/ul/li[2]/a")).click(): null&#xD;
&#xD;
2019-08-23 18:18:53 - [TEST_STEP][PASSED] - Thread.sleep(1000): null&#xD;
&#xD;
2019-08-23 18:18:54 - [TEST_STEP][PASSED] - xpath("/html/body/div[6]/div/div/div[1]/div/div/ul/li[3]/a")).click(): null&#xD;
&#xD;
2019-08-23 18:19:00 - [TEST_STEP][PASSED] - Thread.sleep(1000): null&#xD;
&#xD;
2019-08-23 18:19:01 - [TEST_STEP][PASSED] - message = xpath("/html/body/div[6]/div/div/div[1]/div/div/ul/li[3]/a")).getText(): null&#xD;
&#xD;
2019-08-23 18:19:01 - [TEST_STEP][PASSED] - if (message.contains("(0)")): null&#xD;
&#xD;
2019-08-23 18:19:01 - [TEST_STEP][PASSED] - else: null&#xD;
&#xD;
2019-08-23 18:19:01 - [TEST_STEP][PASSED] - js = driver: null&#xD;
&#xD;
2019-08-23 18:19:01 - [TEST_STEP][PASSED] - js.executeScript("window.scrollTo(0, document.body.scrollHeight)"): null&#xD;
&#xD;
2019-08-23 18:19:01 - [TEST_STEP][PASSED] - rows = driver.findElements(By.xpath("//*[@id='tab-3']/table/tbody/tr")): null&#xD;
&#xD;
2019-08-23 18:19:01 - [TEST_STEP][PASSED] - out.println("Total Rows Size == " + rows.size()): null&#xD;
&#xD;
2019-08-23 18:19:01 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; rows.size(), (i++)]): null&#xD;
&#xD;
2019-08-23 18:19:01 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:19:01 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:19:01 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:19:01 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:19:01 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:19:01 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:19:01 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:19:01 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:19:01 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:19:01 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:19:01 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:19:01 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:19:01 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:19:01 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:19:01 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:19:01 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:19:01 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:19:01 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:19:01 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:19:01 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:19:01 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:19:01 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:19:01 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:19:01 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:19:01 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:19:01 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:19:01 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:19:01 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:19:01 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:19:01 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:19:01 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:19:01 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:19:01 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:19:01 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:19:02 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:19:02 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:19:02 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:19:02 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:19:02 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:19:02 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:19:02 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:19:02 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:19:02 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:19:02 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:19:02 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:19:02 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:19:02 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:19:02 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:19:02 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:19:02 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:19:02 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:19:02 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:19:02 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:19:02 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:19:02 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:19:02 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:19:02 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:19:02 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:19:02 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:19:02 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:19:02 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:19:02 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:19:02 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:19:02 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:19:02 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:19:02 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:19:02 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:19:02 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:19:02 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:19:02 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:19:02 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:19:02 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:19:02 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:19:03 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:19:03 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:19:03 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:19:03 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:19:03 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:19:03 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:19:03 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:19:03 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:19:03 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:19:03 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:19:03 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:19:03 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:19:03 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:19:03 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:19:03 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:19:03 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:19:03 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:19:03 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:19:03 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:19:03 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:19:03 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:19:03 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:19:03 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:19:03 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:19:03 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:19:03 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:19:03 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:19:03 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:19:03 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:19:03 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:19:03 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:19:03 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:19:03 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:19:03 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:19:03 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:19:03 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:19:03 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:19:03 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:19:03 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:19:03 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:19:03 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:19:03 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:19:03 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:19:03 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:19:03 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:19:03 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:19:03 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:19:03 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:19:03 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:19:03 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:19:03 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:19:03 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:19:03 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:19:03 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:19:03 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:19:04 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:19:04 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:19:04 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:19:04 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:19:04 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:19:04 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:19:04 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:19:04 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:19:04 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:19:04 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:19:04 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:19:04 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:19:04 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:19:04 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:19:04 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:19:04 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:19:04 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:19:04 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:19:04 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:19:04 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:19:04 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:19:04 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:19:04 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:19:04 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:19:04 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:19:04 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:19:04 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:19:04 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:19:04 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:19:04 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:19:04 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:19:04 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:19:04 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:19:04 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:19:04 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:19:04 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:19:04 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:19:04 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:19:04 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:19:04 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:19:04 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:19:04 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:19:04 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:19:04 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:19:04 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:19:04 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:19:04 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:19:04 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:19:04 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:19:04 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:19:04 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:19:04 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:19:04 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:19:04 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:19:04 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:19:04 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:19:04 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:19:04 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:19:04 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:19:04 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:19:05 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:19:05 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:19:05 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:19:05 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:19:05 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:19:05 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:19:05 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:19:05 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:19:05 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:19:05 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:19:05 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:19:05 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:19:05 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:19:05 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:19:05 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:19:05 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:19:05 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:19:05 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:19:05 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:19:05 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:19:05 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:19:05 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:19:05 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:19:05 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:19:05 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:19:05 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:19:05 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:19:05 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:19:05 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:19:05 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:19:05 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:19:05 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:19:05 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:19:05 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:19:05 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:19:05 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:19:05 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:19:06 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:19:06 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:19:06 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:19:06 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:19:06 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:19:06 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:19:06 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:19:06 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:19:06 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:19:06 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:19:06 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:19:06 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:19:06 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:19:06 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:19:06 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:19:06 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:19:06 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:19:06 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:19:06 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:19:06 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:19:06 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:19:06 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:19:06 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:19:06 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:19:06 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:19:06 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:19:06 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:19:06 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:19:06 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:19:06 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:19:06 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:19:06 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:19:06 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:19:06 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:19:06 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:19:06 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:19:06 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:19:06 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:19:06 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:19:06 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:19:06 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:19:06 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:19:06 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:19:06 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:19:06 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:19:06 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:19:06 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:19:06 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:19:06 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:19:06 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:19:06 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:19:06 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:19:06 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:19:06 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:19:06 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 18:19:06 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 18:19:07 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 18:19:07 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 18:19:07 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 18:19:07 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 18:19:07 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 18:19:07 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 18:19:07 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 18:19:07 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 18:19:07 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 18:19:07 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 18:19:07 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-3']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 18:19:07 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 18:19:07 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 18:19:07 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 18:19:07 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 18:19:07 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 18:19:07 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 18:19:07 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 18:19:07 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 18:19:07 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 18:19:07 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 18:19:07 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 18:19:07 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 18:19:07 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 18:19:07 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 18:19:07 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 18:19:07 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 18:19:07 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 18:19:07 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 18:19:07 - [TEST_STEP][PASSED] - Thread.sleep(2000): null&#xD;
&#xD;
2019-08-23 18:19:09 - [TEST_STEP][PASSED] - xpath("/html/body/header/div/span[3]")).click(): null&#xD;
&#xD;
2019-08-23 18:19:14 - [TEST_STEP][PASSED] - Thread.sleep(2000): null&#xD;
&#xD;
2019-08-23 18:19:16 - [TEST_STEP][PASSED] - linkText("Sign Out")).click(): null&#xD;
&#xD;
2019-08-23 18:19:46 - [TEST_STEP][PASSED] - Thread.sleep(1000): null&#xD;
&#xD;
2019-08-23 18:19:47 - [TEST_STEP][PASSED] - action = new org.openqa.selenium.interactions.Actions(driver): null&#xD;
&#xD;
2019-08-23 18:19:47 - [TEST_STEP][PASSED] - build().perform(): null&#xD;
&#xD;
2019-08-23 18:19:47 - [TEST_STEP][PASSED] - Thread.sleep(2000): null&#xD;
&#xD;
2019-08-23 18:19:49 - [TEST_STEP][PASSED] - driver.quit(): null</system-out>
            <system-err></system-err>
        </testcase>
        <system-out>2019-08-23 18:11:20 - [TEST_SUITE][INCOMPLETE] - ViewNewAcceptCancelAllBookingByCustomers: null</system-out>
        <system-err>2019-08-23 18:11:20 - [TEST_SUITE][INCOMPLETE] - ViewNewAcceptCancelAllBookingByCustomers: null</system-err>
    </testsuite>
</testsuites>
