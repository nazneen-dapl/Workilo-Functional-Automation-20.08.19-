<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<testsuites name="ViewNewAcceptCancelAllBookingByCustomers" time="84" tests="1" failures="0" errors="0">
    <testsuite name="ViewNewAcceptCancelAllBookingByCustomers" tests="1" failures="0" errors="0" time="84" timestamp="2019-08-23 17:56:14" hostname="DAPL-Asset-180 - DAPL-Asset-180" id="Test Suites/ViewNewAcceptCancelAllBooking/ViewNewAcceptCancelAllBookingByCustomers">
        <properties>
            <property name="deviceName" value=""/>
            <property name="devicePlatform" value=""/>
            <property name="logFolder" value="C:\\Users\\DAPL-Asset-180\\Desktop\\project folder\\Workilo\\WorkiloAutomation(14.8.19)\\Reports\\ViewNewAcceptCancelAllBooking\\ViewNewAcceptCancelAllBookingByCustomers\\20190823_175610"/>
            <property name="logFiles" value="C:\\Users\\DAPL-Asset-180\\Desktop\\project folder\\Workilo\\WorkiloAutomation(14.8.19)\\Reports\\ViewNewAcceptCancelAllBooking\\ViewNewAcceptCancelAllBookingByCustomers\\20190823_175610\\execution0.log"/>
            <property name="attachments" value=""/>
            <property name="hostName" value="DAPL-Asset-180 - DAPL-Asset-180"/>
            <property name="hostAddress" value="192.168.1.188"/>
            <property name="os" value="Windows 8.1 64bit"/>
            <property name="katalonVersion" value="6.2.1.2"/>
        </properties>
        <testcase name="Test Cases/Workilo/Bookings/Customer/CustomerNewOrder(All)" classname="Test Cases/Workilo/Bookings/Customer/CustomerNewOrder(All)" status="PASSED">
            <system-out>2019-08-23 17:56:15 - [TEST_CASE][PASSED] - Test Cases/Workilo/Bookings/Customer/CustomerNewOrder(All): Test Cases/Workilo/Bookings/Customer/CustomerNewOrder(All)&#xD;
&#xD;
2019-08-23 17:56:16 - [TEST_STEP][PASSED] - System.setProperty("webdriver.chrome.driver", chromePath): null&#xD;
&#xD;
2019-08-23 17:56:16 - [TEST_STEP][PASSED] - driver = new org.openqa.selenium.chrome.ChromeDriver(): null&#xD;
&#xD;
2019-08-23 17:56:20 - [TEST_STEP][PASSED] - window().maximize(): null&#xD;
&#xD;
2019-08-23 17:56:21 - [TEST_STEP][PASSED] - try: null&#xD;
&#xD;
2019-08-23 17:56:21 - [TEST_STEP][PASSED] - driver.get("http://workilo.com"): null&#xD;
&#xD;
2019-08-23 17:56:30 - [TEST_STEP][PASSED] - timeouts().implicitlyWait(30, SECONDS): null&#xD;
&#xD;
2019-08-23 17:56:30 - [TEST_STEP][PASSED] - linkText("Log In")).click(): null&#xD;
&#xD;
2019-08-23 17:56:30 - [TEST_STEP][PASSED] - Thread.sleep(2000): null&#xD;
&#xD;
2019-08-23 17:56:32 - [TEST_STEP][PASSED] - id("email_login")).sendKeys("nabin@digitalaptech.com"): null&#xD;
&#xD;
2019-08-23 17:56:33 - [TEST_STEP][PASSED] - id("password_login")).sendKeys("admin#123"): null&#xD;
&#xD;
2019-08-23 17:56:33 - [TEST_STEP][PASSED] - //*[@value='Log in']")).click(): null&#xD;
&#xD;
2019-08-23 17:56:33 - [TEST_STEP][PASSED] - Thread.sleep(3000): null&#xD;
&#xD;
2019-08-23 17:56:36 - [TEST_STEP][PASSED] - xpath("/html/body/header/div/div[2]/ul/li[1]/a")).click(): null&#xD;
&#xD;
2019-08-23 17:56:36 - [TEST_STEP][PASSED] - Thread.sleep(1000): null&#xD;
&#xD;
2019-08-23 17:56:37 - [TEST_STEP][PASSED] - xpath("/html/body/div[4]/div/div[1]/ul/li[2]/a")).click(): null&#xD;
&#xD;
2019-08-23 17:56:39 - [TEST_STEP][PASSED] - Thread.sleep(1000): null&#xD;
&#xD;
2019-08-23 17:56:40 - [TEST_STEP][PASSED] - message = xpath("/html[1]/body[1]/div[6]/div[1]/div[1]/div[1]/div[1]/div[1]/ul[1]/li[1]/a[1]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:40 - [TEST_STEP][PASSED] - if (message.contains("(0)")): null&#xD;
&#xD;
2019-08-23 17:56:40 - [TEST_STEP][PASSED] - else: null&#xD;
&#xD;
2019-08-23 17:56:40 - [TEST_STEP][PASSED] - js = driver: null&#xD;
&#xD;
2019-08-23 17:56:40 - [TEST_STEP][PASSED] - rows = driver.findElements(By.xpath("//*[@id='tab-1']/table/tbody/tr")): null&#xD;
&#xD;
2019-08-23 17:56:40 - [TEST_STEP][PASSED] - out.println("Total Rows Size == " + rows.size()): null&#xD;
&#xD;
2019-08-23 17:56:40 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; rows.size(), (i++)]): null&#xD;
&#xD;
2019-08-23 17:56:40 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 17:56:40 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:40 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:40 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:40 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:40 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:40 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:40 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 17:56:40 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 17:56:40 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 17:56:40 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 17:56:40 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 17:56:41 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 17:56:41 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 17:56:41 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 17:56:41 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 17:56:41 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 17:56:41 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 17:56:41 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 17:56:41 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 17:56:41 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 17:56:41 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 17:56:41 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 17:56:41 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 17:56:41 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 17:56:41 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 17:56:41 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 17:56:41 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 17:56:41 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 17:56:41 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 17:56:41 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 17:56:41 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 17:56:41 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:41 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:41 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:41 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:41 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:41 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:41 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 17:56:41 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 17:56:41 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 17:56:41 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 17:56:41 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 17:56:41 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 17:56:41 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 17:56:41 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 17:56:41 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 17:56:41 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 17:56:41 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 17:56:41 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 17:56:41 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 17:56:41 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 17:56:41 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 17:56:41 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 17:56:41 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 17:56:41 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 17:56:41 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 17:56:41 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 17:56:41 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 17:56:41 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 17:56:41 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 17:56:41 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 17:56:41 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 17:56:41 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:41 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:42 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:42 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:42 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:42 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:42 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 17:56:42 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 17:56:42 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 17:56:42 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 17:56:42 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 17:56:42 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 17:56:42 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 17:56:42 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 17:56:42 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 17:56:42 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 17:56:42 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 17:56:42 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 17:56:42 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 17:56:42 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 17:56:42 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 17:56:42 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 17:56:42 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 17:56:42 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 17:56:42 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 17:56:42 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 17:56:42 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 17:56:42 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 17:56:42 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 17:56:42 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 17:56:42 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 17:56:42 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:42 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:42 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:42 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:42 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:42 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:42 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 17:56:43 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 17:56:43 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 17:56:43 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 17:56:43 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 17:56:43 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 17:56:43 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 17:56:43 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 17:56:43 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 17:56:43 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 17:56:43 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 17:56:43 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 17:56:43 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 17:56:43 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 17:56:43 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 17:56:43 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 17:56:43 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 17:56:43 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 17:56:43 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 17:56:43 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 17:56:43 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 17:56:43 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 17:56:43 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 17:56:43 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 17:56:43 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 17:56:43 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:43 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:43 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:43 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:43 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:43 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:43 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 17:56:43 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 17:56:43 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 17:56:43 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 17:56:43 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 17:56:43 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 17:56:43 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 17:56:43 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 17:56:43 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 17:56:43 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 17:56:43 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 17:56:43 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 17:56:43 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 17:56:43 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 17:56:43 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 17:56:43 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 17:56:43 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 17:56:43 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 17:56:43 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 17:56:43 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 17:56:43 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 17:56:43 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 17:56:43 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 17:56:43 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 17:56:43 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 17:56:43 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:43 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:44 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:44 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:44 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:44 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:44 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 17:56:44 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 17:56:44 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 17:56:44 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 17:56:44 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 17:56:44 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 17:56:44 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 17:56:44 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 17:56:44 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 17:56:44 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 17:56:44 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 17:56:44 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 17:56:44 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 17:56:44 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 17:56:44 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 17:56:44 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 17:56:44 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 17:56:44 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 17:56:44 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 17:56:44 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 17:56:44 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 17:56:44 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 17:56:44 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 17:56:44 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 17:56:44 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 17:56:44 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:44 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:44 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:44 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:44 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:44 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:44 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 17:56:44 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 17:56:44 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 17:56:44 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 17:56:44 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 17:56:45 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 17:56:45 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 17:56:45 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 17:56:45 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 17:56:45 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 17:56:45 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 17:56:45 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 17:56:45 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 17:56:45 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 17:56:45 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 17:56:45 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 17:56:45 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 17:56:45 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 17:56:45 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 17:56:45 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 17:56:45 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 17:56:45 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 17:56:45 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 17:56:45 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 17:56:45 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 17:56:45 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:45 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:45 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:45 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:45 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:45 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:45 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 17:56:45 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 17:56:45 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 17:56:45 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 17:56:45 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 17:56:45 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 17:56:45 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 17:56:45 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 17:56:45 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 17:56:45 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 17:56:45 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 17:56:45 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 17:56:45 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 17:56:45 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 17:56:45 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 17:56:45 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 17:56:45 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 17:56:45 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 17:56:45 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 17:56:45 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 17:56:45 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 17:56:45 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 17:56:45 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 17:56:45 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 17:56:45 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 17:56:45 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:45 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:45 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:45 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:46 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:46 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:46 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 17:56:46 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 17:56:46 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 17:56:46 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 17:56:46 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 17:56:46 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 17:56:46 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 17:56:46 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 17:56:46 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 17:56:46 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 17:56:46 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 17:56:46 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 17:56:46 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 17:56:46 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 17:56:46 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 17:56:46 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 17:56:46 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 17:56:46 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 17:56:46 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 17:56:46 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 17:56:46 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 17:56:46 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 17:56:46 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 17:56:46 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 17:56:46 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 17:56:46 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:46 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:46 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:46 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:46 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:46 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:46 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 17:56:46 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 17:56:46 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 17:56:46 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 17:56:46 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 17:56:46 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 17:56:46 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 17:56:46 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 17:56:46 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 17:56:46 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 17:56:47 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 17:56:47 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 17:56:47 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 17:56:47 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 17:56:47 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 17:56:47 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 17:56:47 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 17:56:47 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 17:56:47 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 17:56:47 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 17:56:47 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 17:56:47 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 17:56:47 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 17:56:47 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 17:56:47 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 17:56:47 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:47 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:47 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:47 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:47 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:47 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:47 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 17:56:47 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 17:56:47 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 17:56:47 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 17:56:47 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 17:56:47 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 17:56:47 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 17:56:47 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 17:56:47 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 17:56:47 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 17:56:47 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 17:56:47 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 17:56:47 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 17:56:47 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 17:56:47 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 17:56:47 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 17:56:47 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 17:56:47 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 17:56:47 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 17:56:47 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 17:56:47 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 17:56:47 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 17:56:47 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 17:56:47 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 17:56:47 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 17:56:47 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:47 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:47 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:47 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:47 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:47 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:48 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 17:56:48 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 17:56:48 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 17:56:48 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 17:56:48 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 17:56:48 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 17:56:48 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 17:56:48 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 17:56:48 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 17:56:48 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 17:56:48 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 17:56:48 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 17:56:48 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 17:56:48 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 17:56:48 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 17:56:48 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 17:56:48 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 17:56:48 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 17:56:48 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 17:56:48 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 17:56:48 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 17:56:48 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 17:56:48 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 17:56:48 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 17:56:48 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 17:56:48 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:48 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:48 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:48 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:48 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:48 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:48 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 17:56:48 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 17:56:48 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 17:56:48 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 17:56:48 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 17:56:48 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 17:56:48 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 17:56:48 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 17:56:48 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 17:56:48 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 17:56:48 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 17:56:48 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 17:56:48 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 17:56:48 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 17:56:48 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 17:56:48 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 17:56:48 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 17:56:48 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 17:56:48 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 17:56:48 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 17:56:48 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 17:56:48 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 17:56:48 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 17:56:48 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 17:56:48 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 17:56:48 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:49 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:49 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:49 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:49 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:49 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:49 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 17:56:49 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 17:56:49 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 17:56:49 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 17:56:49 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 17:56:49 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 17:56:49 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 17:56:49 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 17:56:49 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 17:56:49 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 17:56:49 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 17:56:49 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 17:56:49 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 17:56:49 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 17:56:49 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 17:56:49 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 17:56:49 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 17:56:49 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 17:56:49 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 17:56:49 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 17:56:49 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 17:56:49 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 17:56:49 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 17:56:49 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 17:56:49 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 17:56:49 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:50 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:51 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:51 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:51 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:51 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:51 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 17:56:51 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 17:56:51 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 17:56:51 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 17:56:51 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 17:56:51 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 17:56:51 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 17:56:51 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 17:56:51 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 17:56:51 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 17:56:51 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 17:56:51 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 17:56:51 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 17:56:51 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 17:56:51 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 17:56:51 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 17:56:51 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 17:56:51 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 17:56:51 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 17:56:51 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 17:56:51 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 17:56:51 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 17:56:51 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 17:56:51 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 17:56:51 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 17:56:51 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:51 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:51 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:51 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:51 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:51 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:52 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 17:56:52 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 17:56:52 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 17:56:52 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 17:56:52 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 17:56:52 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 17:56:52 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 17:56:52 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 17:56:52 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 17:56:52 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 17:56:52 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 17:56:52 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 17:56:52 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 17:56:52 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 17:56:52 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 17:56:52 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 17:56:52 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 17:56:52 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 17:56:52 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 17:56:52 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 17:56:52 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 17:56:52 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 17:56:52 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 17:56:52 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 17:56:52 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 17:56:52 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:52 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:52 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:52 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:52 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:52 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:52 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 17:56:52 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 17:56:55 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 17:56:55 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 17:56:55 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 17:56:55 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 17:56:55 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 17:56:55 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 17:56:55 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 17:56:55 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 17:56:55 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 17:56:55 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 17:56:55 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 17:56:55 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 17:56:55 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 17:56:55 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 17:56:55 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 17:56:55 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 17:56:55 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 17:56:55 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 17:56:55 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 17:56:55 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 17:56:55 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 17:56:55 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 17:56:55 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 17:56:55 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:55 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:56 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:56 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:56 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:56 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:56 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 17:56:56 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 17:56:56 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 17:56:56 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 17:56:56 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 17:56:56 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 17:56:56 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 17:56:56 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 17:56:56 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 17:56:56 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 17:56:56 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 17:56:56 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 17:56:56 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 17:56:56 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 17:56:56 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 17:56:56 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 17:56:56 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 17:56:56 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 17:56:56 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 17:56:56 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 17:56:56 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 17:56:56 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 17:56:56 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 17:56:56 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 17:56:56 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 17:56:56 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:56 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:56 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:56 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:56 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:56 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 17:56:56 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 17:56:57 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 17:56:57 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 17:56:57 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 17:56:57 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 17:56:57 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 17:56:57 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 17:56:57 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 17:57:00 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 17:57:00 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 17:57:00 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 17:57:00 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 17:57:01 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 17:57:01 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 17:57:01 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 17:57:01 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 17:57:01 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 17:57:01 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 17:57:01 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 17:57:01 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 17:57:01 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 17:57:01 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 17:57:01 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 17:57:01 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 17:57:01 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 17:57:01 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 17:57:01 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 17:57:01 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 17:57:01 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 17:57:01 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 17:57:01 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 17:57:01 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 17:57:01 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 17:57:01 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 17:57:01 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 17:57:01 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 17:57:01 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 17:57:01 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 17:57:01 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 17:57:01 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 17:57:01 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 17:57:01 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 17:57:01 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 17:57:01 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 17:57:01 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 17:57:01 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 17:57:01 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 17:57:01 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 17:57:01 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 17:57:01 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 17:57:01 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 17:57:01 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 17:57:01 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 17:57:01 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 17:57:01 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 17:57:01 - [TEST_STEP][PASSED] - out.println("Items == " + i + 1): null&#xD;
&#xD;
2019-08-23 17:57:01 - [TEST_STEP][PASSED] - orderValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")).getText(): null&#xD;
&#xD;
2019-08-23 17:57:01 - [TEST_STEP][PASSED] - addressValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")).getText(): null&#xD;
&#xD;
2019-08-23 17:57:01 - [TEST_STEP][PASSED] - listingValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")).getText(): null&#xD;
&#xD;
2019-08-23 17:57:02 - [TEST_STEP][PASSED] - bookingDateValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")).getText(): null&#xD;
&#xD;
2019-08-23 17:57:02 - [TEST_STEP][PASSED] - statusValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")).getText(): null&#xD;
&#xD;
2019-08-23 17:57:02 - [TEST_STEP][PASSED] - paymentValue = xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")).getText(): null&#xD;
&#xD;
2019-08-23 17:57:02 - [TEST_STEP][PASSED] - order = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[1]")): null&#xD;
&#xD;
2019-08-23 17:57:02 - [TEST_STEP][PASSED] - address = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[2]")): null&#xD;
&#xD;
2019-08-23 17:57:02 - [TEST_STEP][PASSED] - listing = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[3]")): null&#xD;
&#xD;
2019-08-23 17:57:02 - [TEST_STEP][PASSED] - bookingDate = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[4]")): null&#xD;
&#xD;
2019-08-23 17:57:02 - [TEST_STEP][PASSED] - status = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[5]")): null&#xD;
&#xD;
2019-08-23 17:57:02 - [TEST_STEP][PASSED] - paymentStatus = driver.findElement(By.xpath("//*[@id='tab-1']/table/tbody/tr[" + i + 1 + "]/td[6]")): null&#xD;
&#xD;
2019-08-23 17:57:02 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", order): null&#xD;
&#xD;
2019-08-23 17:57:02 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", address): null&#xD;
&#xD;
2019-08-23 17:57:02 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", listing): null&#xD;
&#xD;
2019-08-23 17:57:02 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", bookingDate): null&#xD;
&#xD;
2019-08-23 17:57:02 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", status): null&#xD;
&#xD;
2019-08-23 17:57:02 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].style.border='3px solid red'", paymentStatus): null&#xD;
&#xD;
2019-08-23 17:57:02 - [TEST_STEP][PASSED] - out.println("OrderValues == " + orderValue): null&#xD;
&#xD;
2019-08-23 17:57:02 - [TEST_STEP][PASSED] - out.println("AddressValues == " + addressValue): null&#xD;
&#xD;
2019-08-23 17:57:02 - [TEST_STEP][PASSED] - out.println("ListingValues == " + listingValue): null&#xD;
&#xD;
2019-08-23 17:57:02 - [TEST_STEP][PASSED] - out.println("BookinDateValues == " + bookingDateValue): null&#xD;
&#xD;
2019-08-23 17:57:06 - [TEST_STEP][PASSED] - out.println("StatusValues == " + statusValue): null&#xD;
&#xD;
2019-08-23 17:57:06 - [TEST_STEP][PASSED] - out.println("PaymentStatusValues == " + paymentValue): null&#xD;
&#xD;
2019-08-23 17:57:06 - [TEST_STEP][PASSED] - Assert.assertNotEquals(orderValue, null, "Order number is null"): null&#xD;
&#xD;
2019-08-23 17:57:06 - [TEST_STEP][PASSED] - Assert.assertNotEquals(addressValue, null, "Address is null"): null&#xD;
&#xD;
2019-08-23 17:57:06 - [TEST_STEP][PASSED] - Assert.assertNotEquals(listingValue, null, "Listing is null"): null&#xD;
&#xD;
2019-08-23 17:57:07 - [TEST_STEP][PASSED] - Assert.assertNotEquals(bookingDateValue, null, "Booking date is null"): null&#xD;
&#xD;
2019-08-23 17:57:07 - [TEST_STEP][PASSED] - Assert.assertNotEquals(statusValue, null, "Status is null"): null&#xD;
&#xD;
2019-08-23 17:57:07 - [TEST_STEP][PASSED] - Assert.assertNotEquals(paymentValue, null, "Payment status is null"): null&#xD;
&#xD;
2019-08-23 17:57:07 - [TEST_STEP][PASSED] - xpath("/html/body/header/div/div[2]/ul/li[1]/a")).click(): null&#xD;
&#xD;
2019-08-23 17:57:37 - [TEST_STEP][PASSED] - catch (Exception e): null&#xD;
&#xD;
2019-08-23 17:57:37 - [TEST_STEP][PASSED] - src = driver.getScreenshotAs(FILE): null&#xD;
&#xD;
2019-08-23 17:57:38 - [TEST_STEP][PASSED] - FileUtils.copyFile(src, new java.io.File(((screenshots + java.lang.System.currentTimeMillis()) + .png))): null&#xD;
&#xD;
2019-08-23 17:57:38 - [TEST_STEP][PASSED] - out.println(e.getMessage()): null&#xD;
&#xD;
2019-08-23 17:57:38 - [TEST_STEP][PASSED] - driver.quit(): null</system-out>
            <system-err></system-err>
        </testcase>
        <system-out>2019-08-23 17:56:14 - [TEST_SUITE][INCOMPLETE] - ViewNewAcceptCancelAllBookingByCustomers: null</system-out>
        <system-err>2019-08-23 17:56:14 - [TEST_SUITE][INCOMPLETE] - ViewNewAcceptCancelAllBookingByCustomers: null</system-err>
    </testsuite>
</testsuites>
